const formatNumber = (num) => num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");

document.addEventListener('DOMContentLoaded', () => {
    const users = JSON.parse(localStorage.getItem('users')) || [];
    const loggedInUser = localStorage.getItem('loggedInUser');

    if (!loggedInUser) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
        window.location.href = './login/emailLogin.html'; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
        return;
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ database.json
    fetch("./database.json")
        .then(response => response.json())
        .then(db => {
            const main = document.getElementById("main");

            const cleanUsername = (username) => username.replace(/#\d{4}$/, "");

            const userCards = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

            const renderUser = (userId) => {
                const user = db.users.find(u => u.id === userId);
                if (!user) {
                    console.error(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                    return;
                }

                const statusClass = user.status === "online" ? "status-online" :
                                    user.status === "offline" ? "status-offline" : "status-away";
                const statusIcon = user.status === "online" ? "üü¢" :
                                   user.status === "offline" ? "üî¥" : "üü°";

                const topGames = user.topGames?.length ? `
                    <div class="section-title">üéÆ –¢–æ–ø –∏–≥—Ä—ã:</div>
                    <ul class="game-list">
                        ${user.topGames.slice(0, 3).map(game => `<li>${game.name} ‚Äî ${formatNumber(game.playtime)} hours</li>`).join("")}
                    </ul>
                ` : "";

                const languages = user.languages?.length ? `<p>–Ø–∑—ã–∫–∏üó£ ${user.languages.join(", ")}</p>` : "";
                const location = user.location ? `<p>–ì–æ—Ä–æ–¥üìç ${user.location}</p>` : "";
                const voiceChat = user.voiceChat ? `<p>–í–æ–π—Å-—á–∞—Ç—ãüéô ${user.voiceChatPlatforms.join(", ")}</p>` : "";

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å—Å–∏–≤
                userCards.push({
                    userId: user.id,
                    avatar: user.avatar,
                    username: cleanUsername(user.username),
                    age: user.age,
                    statusClass: statusClass,
                    statusIcon: statusIcon,
                    realName: user.realName,
                    skillLevel: user.skillLevel,
                    description: user.description,
                    topGames: topGames,
                    location: location,
                    languages: languages,
                    voiceChat: voiceChat
                });
            };

            const renderUserCards = () => {
                userCards.forEach(userCard => {
                    main.insertAdjacentHTML("beforeend", `
                        <div class="userCard" id="${userCard.userId}" data-user-id="${userCard.userId}">
                            <img src="${userCard.avatar}" alt="${userCard.username}'s avatar" class="userAvatar">
                            <p class="userName">${userCard.username}</p>
                            <p class="userAge aBitGray">Age: ${userCard.age}</p>
                            <div class="userLastLine">
                                <p class="${userCard.statusClass} aBitGray"><!--${userCard.statusIcon} --> ${userCard.statusClass === 'status-online' ? 'online' : 'offline'}</p>
                                <button class="btn btn-primary like" title="Like">–õ–∞–π–∫</button>
                            </div>
                        </div>
                    `);
                });
            };

            // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            db.users.forEach(user => renderUser(user.id));

            // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            renderUserCards();

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            document.addEventListener("click", (e) => {
                const card = e.target.closest(".userCard");
                const likeButton = e.target.closest(".like"); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∫–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫–µ "–õ–∞–π–∫"

                if (likeButton) {
                    // –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–õ–∞–π–∫", –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
                    return;
                }

                if (card) {
                    const userId = card.dataset.userId;
                    openModal(db.users.find(u => u.id === userId)); // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É
                }
            });

            document.querySelector('.bi-xii').addEventListener('click', closeModal);
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON:", error));
});

function openModal(user) {
    let oMain = document.querySelector("#main");
    let oModal = document.querySelector(".modal");
    oModal.classList.add("opened");
    oMain.classList.add("closed");

    const modalBody = oModal.querySelector(".modalBody");
    modalBody.innerHTML = `
        <div class="modalContent">
            <img src="${user.avatar}" alt="${user.username}'s avatar" class="userAvatar" style="max-height: 150px;">
            <h2>${user.username}</h2>
            <p><strong>–†–µ–∞–ª—å–Ω–æ–µ –∏–º—è:</strong> ${user.realName}</p>
            <p><strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> ${user.age}</p>
            <p><strong>–ì–æ—Ä–æ–¥:</strong> ${user.location}</p>
            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${user.description}</p>
            <p><strong>–Ø–∑—ã–∫–∏:</strong> ${user.languages.join(", ")}</p>
            <div class="topGames">
                <h3>–¢–æ–ø –∏–≥—Ä—ã:</h3>
                <ul>
                    ${user.topGames.map(game => `<li>${game.name} ‚Äî ${formatNumber(game.playtime)} —á–∞—Å–æ–≤</li>`).join("")}
                </ul>
            </div>
            <div class="schedule">
                <h3>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</h3>
                <p><strong>–ë—É–¥–Ω–∏:</strong> ${user.schedule.weekdays.join(", ")}</p>
                <p><strong>–í—ã—Ö–æ–¥–Ω—ã–µ:</strong> ${user.schedule.weekends.join(", ")}</p>
            </div>
            <button class="btn btn-primary like" title="Like">–õ–∞–π–∫</button> <!-- –ö–Ω–æ–ø–∫–∞ –ª–∞–π–∫–∞ -->
        </div>
    `;

    // –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    const closeButton = oModal.querySelector('.close-button');
    closeButton.addEventListener('click', closeModal);

    // –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–õ–∞–π–∫"
    const likeButton = modalBody.querySelector('.like');
    likeButton.addEventListener('click', () => {
        console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.username} –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è!`);
        closeModal(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É –ø–æ—Å–ª–µ –ª–∞–π–∫–∞ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
    });
}

function closeModal() {
    let oMain = document.querySelector("#main");
    let oModal = document.querySelector(".modal");
    oModal.classList.remove("opened");
    oMain.classList.remove("closed");
}

function login(username, password) {
    const user = db.users.find(u => u.username === username);
    if (!user) {
        console.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
        return false;
    }
    if (user.password !== password) {
        console.error("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å");
        return false;
    }
    console.log("–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!");
    return true;
}

// –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Ö–æ–¥–∞
const usernameInput = "CyberNinja"; // –ü–æ–ª—É—á–∏—Ç–µ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ñ–æ—Ä–º—ã
const passwordInput = "123"; // –ü–æ–ª—É—á–∏—Ç–µ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ñ–æ—Ä–º—ã
login(usernameInput, passwordInput);
