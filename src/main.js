import db from "./database.json" assert { type: "json" };

const main = document.getElementById("main");

function cleanUsername(username) {
    return username.replace(/#\d{4}$/, "");
}

function formatNumber(num) {
    return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
}

function renderUser(userId) {
    const user = db.users.find(u => u.id === userId);
    if (!user) {
        console.error(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        return;
    }

    let statusClass = user.status === "online" ? "status-online" :
                      user.status === "offline" ? "status-offline" : "status-away";
                      let statusIcon = user.status === "online" ? "üü¢" :
                     user.status === "offline" ? "üî¥" : "üü°";

    const topGames = user.topGames?.length ? `
        <div class="section-title">üéÆ –¢–æ–ø –∏–≥—Ä—ã:</div>
        <ul class="game-list">
            ${user.topGames.slice(0, 3).map(game => `<li>${game.name} ‚Äî ${formatNumber(game.playtime)} —á.</li>`).join("")}
        </ul>
    ` : "";

    const languages = user.languages?.length ? `<p>–Ø–∑—ã–∫–∏üó£ ${user.languages.join(", ")}</p>` : "";
    const location = user.location ? `<p>–ì–æ—Ä–æ–¥üìç ${user.location}</p>` : "";
    const voiceChat = user.voiceChat ? `<p>–í–æ–π—Å-—á–∞—Ç—ãüéô ${user.voiceChatPlatforms.join(", ")}</p>` : "";

    main.insertAdjacentHTML("beforeend", `
        <div class="user-card" data-user-id="${user.id}">
            <img src="${user.avatar}" alt="–ê–≤–∞—Ç–∞—Ä ${user.username}">
            <div class="user-info">
                <h2 class="${statusClass}">${cleanUsername(user.username)}, ${user.age}  ${statusIcon}</h2>
                <p><strong>${user.realName}</strong> ‚Äî –£—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã ${user.skillLevel}</p>
                <p>${user.description}</p>
                ${topGames}
                ${location}
                ${languages}
                ${voiceChat}
            </div>
            <div class="actions">
                <button class="dislike" title="–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è"><i class="fas fa-times"></i></button>
                <button class="like" title="–ù—Ä–∞–≤–∏—Ç—Å—è"><i class="fas fa-heart"></i></button>
            </div>
        </div>
    `);
}

// –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
db.users.forEach(user => renderUser(user.id));

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
document.addEventListener("click", (e) => {
    const button = e.target.closest("button");
    if (!button) return;

    const card = button.closest(".user-card");
    const userId = card.dataset.userId;

    if (button.classList.contains("like")) {
        console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è!`);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è "swipe right"
    } else if (button.classList.contains("dislike")) {
        console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è!`);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è "swipe left"
    }
});